% !Rnw root = paper.Rnw

<<'010-theme-wideplot', cache=FALSE>>=
# theme_wideplot() is for fullpage plots, and based on theme_gray()
# https://github.com/tidyverse/ggplot2/blob/master/R/theme-defaults.r
theme_wideplot <- function(base_size = 10, base_family = "",
                               base_line_size = base_size / 20,
                               base_rect_size = base_size / 20) {
   half_line <- base_size / 2
   
   theme(
      line =               element_line(
         colour = "black", size = base_line_size,
         linetype = 1, lineend = "butt"
      ),
      rect =               element_rect(
         fill = "white", colour = "black",
         size = base_rect_size, linetype = 1
      ),
      text =               element_text(
         family = base_family, face = "plain",
         colour = "black", size = base_size,
         lineheight = 0.9, hjust = 0.5, vjust = 0.5, angle = 0,
         margin = margin(), debug = FALSE
      ),
      
      axis.line =          element_blank(),
      axis.line.x =        NULL,
      axis.line.y =        NULL,
      axis.text =          element_text(size = rel(0.8), colour = "grey30"),
      axis.text.x =        element_text(margin = margin(t = 0.8 * half_line / 2), vjust = 1),
      axis.text.x.top =    element_text(margin = margin(b = 0.8 * half_line / 2), vjust = 0),
      axis.text.y =        element_text(margin = margin(r = 0.8 * half_line / 2), hjust = 1),
      axis.text.y.right =  element_text(margin = margin(l = 0.8 * half_line / 2), hjust = 0),
      axis.ticks =         element_line(colour = "grey20"),
      axis.ticks.length =  unit(half_line / 2, "pt"),
      axis.title.x =       element_text(
         margin = margin(t = half_line),
         vjust = 1
      ),
      axis.title.x.top =   element_text(
         margin = margin(b = half_line),
         vjust = 0
      ),
      axis.title.y =       element_text(
         angle = 90,
         margin = margin(r = half_line),
         vjust = 1
      ),
      axis.title.y.right = element_text(
         angle = -90,
         margin = margin(l = half_line),
         vjust = 0
      ),
      
      legend.background =  element_rect(colour = NA),
      legend.spacing =     unit(0.4, "cm"),
      legend.spacing.x =    NULL,
      legend.spacing.y =    NULL,
      legend.margin =      margin(0.2, 0.2, 0.2, 0.2, "cm"),
      legend.key =         element_rect(fill = "grey95", colour = "white"),
      legend.key.size =    unit(1.2, "lines"),
      legend.key.height =  NULL,
      legend.key.width =   NULL,
      legend.text =        element_text(size = rel(0.8)),
      legend.text.align =  NULL,
      legend.title =       element_text(hjust = 0),
      legend.title.align = NULL,
      legend.position =    "right",
      legend.direction =   NULL,
      legend.justification = "center",
      legend.box =         NULL,
      legend.box.margin =  margin(0, 0, 0, 0, "cm"),
      legend.box.background = element_blank(),
      legend.box.spacing = unit(0.4, "cm"),
      
      panel.background =   element_rect(fill = "grey92", colour = NA),
      panel.border =       element_blank(),
      panel.grid.major =   element_line(colour = "white"),
      panel.grid.minor =   element_line(colour = "white", size = rel(0.5)),
      panel.spacing =      unit(half_line, "pt"),
      panel.spacing.x =    NULL,
      panel.spacing.y =    NULL,
      panel.ontop    =     FALSE,
      
      strip.background =   element_rect(fill = "grey85", colour = NA),
      strip.text =         element_text(
         colour = "grey10",
         size = rel(0.8),
         margin = margin(half_line, half_line, half_line, half_line)
      ),
      strip.text.x =       NULL,
      strip.text.y =       element_text(angle = -90),
      strip.placement =    "inside",
      strip.placement.x =  NULL,
      strip.placement.y =  NULL,
      strip.switch.pad.grid = unit(0.1, "cm"),
      strip.switch.pad.wrap = unit(0.1, "cm"),
      
      plot.background =    element_rect(colour = "white"),
      plot.title =         element_text(
         size = rel(1.2),
         hjust = 0, vjust = 1,
         margin = margin(b = half_line * 1.2)
      ),
      plot.subtitle =      element_text(
         size = rel(0.9),
         hjust = 0, vjust = 1,
         margin = margin(b = half_line * 0.9)
      ),
      plot.caption =       element_text(
         size = rel(0.9),
         hjust = 1, vjust = 1,
         margin = margin(t = half_line * 0.9)
      ),
      plot.margin =        margin(half_line, half_line, half_line, half_line),
      
      complete = TRUE
   ) %+replace%
      # modification based on theme_bw()
      theme(
         # black axis text
         axis.text         = element_text(size = rel(0.8), colour = "black"),
         legend.background =  element_rect(colour = "grey85"),
         # white background and dark border
         panel.background  = element_rect(fill = "white", colour = NA),
         panel.border      = element_rect(fill = NA, colour = "grey20"),
         # make gridlines dark, same contrast with white as in theme_grey
         panel.grid.major  = element_line(colour = "grey92"), 
         panel.grid.minor  = element_line(colour = "grey92", size = rel(0.5)),
         # contour strips to match panel contour (slightly lighter fill than default)
         strip.background  = element_rect(fill = "grey92", colour = "grey20"), # fill="grey85"
         strip.text        = element_text(colour = "black", size = rel(0.8), 
                                         margin = margin(half_line, half_line, half_line, half_line)),
         # match legend key to background
         legend.key        = element_rect(fill = "white", colour = NA),
         
         complete = TRUE
      )
}
@